{"version":3,"file":"521.bundle.js","mappings":"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","sources":["webpack://ulogger-server/./node_modules/ol/events/Event.js","webpack://ulogger-server/./node_modules/ol/ObjectEventType.js","webpack://ulogger-server/./node_modules/ol/Disposable.js","webpack://ulogger-server/./node_modules/ol/array.js","webpack://ulogger-server/./node_modules/ol/functions.js","webpack://ulogger-server/./node_modules/ol/obj.js","webpack://ulogger-server/./node_modules/ol/events/Target.js","webpack://ulogger-server/./node_modules/ol/events/EventType.js","webpack://ulogger-server/./node_modules/ol/events.js","webpack://ulogger-server/./node_modules/ol/Observable.js","webpack://ulogger-server/./node_modules/ol/util.js","webpack://ulogger-server/./node_modules/ol/Object.js","webpack://ulogger-server/./node_modules/ol/MapEventType.js","webpack://ulogger-server/./node_modules/ol/has.js","webpack://ulogger-server/./node_modules/ol/dom.js","webpack://ulogger-server/./node_modules/ol/control/Control.js","webpack://ulogger-server/./node_modules/ol/css.js","webpack://ulogger-server/./node_modules/ol/easing.js","webpack://ulogger-server/./node_modules/ol/control/Rotate.js","webpack://ulogger-server/./node_modules/ol/proj/Units.js","webpack://ulogger-server/./node_modules/ol/proj/Projection.js","webpack://ulogger-server/./node_modules/ol/proj/epsg3857.js","webpack://ulogger-server/./node_modules/ol/proj/epsg4326.js","webpack://ulogger-server/./node_modules/ol/proj/projections.js","webpack://ulogger-server/./node_modules/ol/proj/transforms.js","webpack://ulogger-server/./node_modules/ol/extent/Relationship.js","webpack://ulogger-server/./node_modules/ol/AssertionError.js","webpack://ulogger-server/./node_modules/ol/asserts.js","webpack://ulogger-server/./node_modules/ol/extent.js","webpack://ulogger-server/./node_modules/ol/math.js","webpack://ulogger-server/./node_modules/ol/coordinate.js","webpack://ulogger-server/./node_modules/ol/sphere.js","webpack://ulogger-server/./node_modules/ol/proj.js","webpack://ulogger-server/./node_modules/ol/control/ScaleLine.js","webpack://ulogger-server/./node_modules/ol/control/Zoom.js","webpack://ulogger-server/./node_modules/ol/transform.js","webpack://ulogger-server/./node_modules/ol/geom/flat/transform.js","webpack://ulogger-server/./node_modules/ol/geom/Geometry.js","webpack://ulogger-server/./node_modules/ol/geom/SimpleGeometry.js","webpack://ulogger-server/./node_modules/ol/geom/flat/closest.js","webpack://ulogger-server/./node_modules/ol/geom/flat/deflate.js","webpack://ulogger-server/./node_modules/ol/geom/flat/simplify.js","webpack://ulogger-server/./node_modules/ol/geom/flat/inflate.js","webpack://ulogger-server/./node_modules/ol/geom/flat/area.js","webpack://ulogger-server/./node_modules/ol/geom/LinearRing.js","webpack://ulogger-server/./node_modules/ol/geom/Point.js","webpack://ulogger-server/./node_modules/ol/geom/flat/contains.js","webpack://ulogger-server/./node_modules/ol/geom/flat/interiorpoint.js","webpack://ulogger-server/./node_modules/ol/geom/flat/segments.js","webpack://ulogger-server/./node_modules/ol/geom/flat/intersectsextent.js","webpack://ulogger-server/./node_modules/ol/geom/flat/reverse.js","webpack://ulogger-server/./node_modules/ol/geom/flat/orient.js","webpack://ulogger-server/./node_modules/ol/geom/Polygon.js","webpack://ulogger-server/./node_modules/ol/control/ZoomToExtent.js","webpack://ulogger-server/./node_modules/ol/geom/flat/interpolate.js","webpack://ulogger-server/./node_modules/ol/geom/flat/length.js","webpack://ulogger-server/./node_modules/ol/geom/LineString.js","webpack://ulogger-server/./node_modules/ol/Feature.js","webpack://ulogger-server/./node_modules/ol/ImageState.js","webpack://ulogger-server/./node_modules/ol/size.js","webpack://ulogger-server/./node_modules/ol/style/Image.js","webpack://ulogger-server/./node_modules/ol/color.js","webpack://ulogger-server/./node_modules/ol/style/IconImageCache.js","webpack://ulogger-server/./node_modules/ol/Image.js","webpack://ulogger-server/./node_modules/ol/style/IconImage.js","webpack://ulogger-server/./node_modules/ol/style/Icon.js","webpack://ulogger-server/./node_modules/ol/CollectionEventType.js","webpack://ulogger-server/./node_modules/ol/Collection.js","webpack://ulogger-server/./node_modules/ol/layer/Property.js","webpack://ulogger-server/./node_modules/ol/layer/Base.js","webpack://ulogger-server/./node_modules/ol/render/EventType.js","webpack://ulogger-server/./node_modules/ol/layer/Layer.js","webpack://ulogger-server/./node_modules/ol/renderer/Map.js","webpack://ulogger-server/./node_modules/ol/render/Event.js","webpack://ulogger-server/./node_modules/ol/render/canvas.js","webpack://ulogger-server/./node_modules/ol/renderer/Composite.js","webpack://ulogger-server/./node_modules/ol/layer/Group.js","webpack://ulogger-server/./node_modules/ol/MapEvent.js","webpack://ulogger-server/./node_modules/ol/MapBrowserEvent.js","webpack://ulogger-server/./node_modules/ol/MapBrowserEventType.js","webpack://ulogger-server/./node_modules/ol/pointer/EventType.js","webpack://ulogger-server/./node_modules/ol/MapBrowserEventHandler.js","webpack://ulogger-server/./node_modules/ol/MapProperty.js","webpack://ulogger-server/./node_modules/ol/structs/PriorityQueue.js","webpack://ulogger-server/./node_modules/ol/TileState.js","webpack://ulogger-server/./node_modules/ol/TileQueue.js","webpack://ulogger-server/./node_modules/ol/ViewHint.js","webpack://ulogger-server/./node_modules/ol/ViewProperty.js","webpack://ulogger-server/./node_modules/ol/tilegrid/common.js","webpack://ulogger-server/./node_modules/ol/centerconstraint.js","webpack://ulogger-server/./node_modules/ol/resolutionconstraint.js","webpack://ulogger-server/./node_modules/ol/rotationconstraint.js","webpack://ulogger-server/./node_modules/ol/View.js","webpack://ulogger-server/./node_modules/ol/control/Attribution.js","webpack://ulogger-server/./node_modules/ol/interaction/Property.js","webpack://ulogger-server/./node_modules/ol/interaction/Interaction.js","webpack://ulogger-server/./node_modules/ol/interaction/DoubleClickZoom.js","webpack://ulogger-server/./node_modules/ol/interaction/Pointer.js","webpack://ulogger-server/./node_modules/ol/events/condition.js","webpack://ulogger-server/./node_modules/ol/interaction/DragPan.js","webpack://ulogger-server/./node_modules/ol/interaction/DragRotate.js","webpack://ulogger-server/./node_modules/ol/render/Box.js","webpack://ulogger-server/./node_modules/ol/interaction/DragBox.js","webpack://ulogger-server/./node_modules/ol/interaction/DragZoom.js","webpack://ulogger-server/./node_modules/ol/events/KeyCode.js","webpack://ulogger-server/./node_modules/ol/interaction/KeyboardPan.js","webpack://ulogger-server/./node_modules/ol/interaction/KeyboardZoom.js","webpack://ulogger-server/./node_modules/ol/Kinetic.js","webpack://ulogger-server/./node_modules/ol/interaction/MouseWheelZoom.js","webpack://ulogger-server/./node_modules/ol/interaction/PinchRotate.js","webpack://ulogger-server/./node_modules/ol/interaction/PinchZoom.js","webpack://ulogger-server/./node_modules/ol/Map.js","webpack://ulogger-server/./node_modules/ol/control/defaults.js","webpack://ulogger-server/./node_modules/ol/interaction/defaults.js","webpack://ulogger-server/./node_modules/ol/Tile.js","webpack://ulogger-server/./node_modules/ol/ImageTile.js","webpack://ulogger-server/./node_modules/ol/reproj/Triangulation.js","webpack://ulogger-server/./node_modules/ol/reproj.js","webpack://ulogger-server/./node_modules/ol/reproj/Tile.js","webpack://ulogger-server/./node_modules/ol/reproj/common.js","webpack://ulogger-server/./node_modules/ol/structs/LRUCache.js","webpack://ulogger-server/./node_modules/ol/tilecoord.js","webpack://ulogger-server/./node_modules/ol/TileCache.js","webpack://ulogger-server/./node_modules/ol/source/TileEventType.js","webpack://ulogger-server/./node_modules/ol/source/Source.js","webpack://ulogger-server/./node_modules/ol/TileRange.js","webpack://ulogger-server/./node_modules/ol/tilegrid/TileGrid.js","webpack://ulogger-server/./node_modules/ol/tilegrid.js","webpack://ulogger-server/./node_modules/ol/source/Tile.js","webpack://ulogger-server/./node_modules/ol/tileurlfunction.js","webpack://ulogger-server/./node_modules/ol/source/UrlTile.js","webpack://ulogger-server/./node_modules/ol/source/TileImage.js","webpack://ulogger-server/./node_modules/ol/source/XYZ.js","webpack://ulogger-server/./node_modules/ol/source/OSM.js","webpack://ulogger-server/./node_modules/ol/Overlay.js","webpack://ulogger-server/./node_modules/ol/style/Stroke.js","webpack://ulogger-server/./node_modules/ol/colorlike.js","webpack://ulogger-server/./node_modules/ol/style/RegularShape.js","webpack://ulogger-server/./node_modules/ol/style/Circle.js","webpack://ulogger-server/./node_modules/ol/style/Fill.js","webpack://ulogger-server/./node_modules/ol/style/Style.js","webpack://ulogger-server/./node_modules/ol/layer/TileProperty.js","webpack://ulogger-server/./node_modules/ol/layer/BaseTile.js","webpack://ulogger-server/./node_modules/ol/renderer/Layer.js","webpack://ulogger-server/./node_modules/ol/renderer/canvas/Layer.js","webpack://ulogger-server/./node_modules/ol/renderer/canvas/TileLayer.js","webpack://ulogger-server/./node_modules/ol/layer/Tile.js","webpack://ulogger-server/./node_modules/ol/structs/RBush.js","webpack://ulogger-server/./node_modules/ol/source/VectorEventType.js","webpack://ulogger-server/./node_modules/ol/loadingstrategy.js","webpack://ulogger-server/./node_modules/ol/featureloader.js","webpack://ulogger-server/./node_modules/ol/source/Vector.js","webpack://ulogger-server/./node_modules/ol/style/Text.js","webpack://ulogger-server/./node_modules/ol/style/flat.js","webpack://ulogger-server/./node_modules/ol/layer/BaseVector.js","webpack://ulogger-server/./node_modules/ol/render/canvas/Instruction.js","webpack://ulogger-server/./node_modules/ol/render/VectorContext.js","webpack://ulogger-server/./node_modules/ol/render/canvas/Builder.js","webpack://ulogger-server/./node_modules/ol/render/canvas/ImageBuilder.js","webpack://ulogger-server/./node_modules/ol/render/canvas/LineStringBuilder.js","webpack://ulogger-server/./node_modules/ol/render/canvas/PolygonBuilder.js","webpack://ulogger-server/./node_modules/ol/geom/flat/straightchunk.js","webpack://ulogger-server/./node_modules/ol/render/canvas/TextBuilder.js","webpack://ulogger-server/./node_modules/ol/render/canvas/BuilderGroup.js","webpack://ulogger-server/./node_modules/ol/geom/flat/textpath.js","webpack://ulogger-server/./node_modules/ol/render/canvas/Executor.js","webpack://ulogger-server/./node_modules/ol/render/canvas/ExecutorGroup.js","webpack://ulogger-server/./node_modules/ol/render/canvas/Immediate.js","webpack://ulogger-server/./node_modules/ol/render/canvas/hitdetect.js","webpack://ulogger-server/./node_modules/ol/renderer/vector.js","webpack://ulogger-server/./node_modules/ol/renderer/canvas/VectorLayer.js","webpack://ulogger-server/./js/src/lib/ol.js","webpack://ulogger-server/./node_modules/ol/layer/Vector.js","webpack://ulogger-server/./node_modules/rbush/rbush.min.js"],"sourcesContent":["/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (typeof direction === 'function') {\n            if (direction(target, arr[i - 1], arr[i]) > 0) {\n              return i - 1;\n            } else {\n              return i;\n            }\n          } else if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '7.0.0';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message =\n      'Assertion failed. See https://openlayers.org/en/' +\n      path +\n      '/doc/errors/#' +\n      code +\n      ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    } else if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    } else if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output, dimension) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output, dimension) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  This includes all API\n * methods except for those interacting with tile grids.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      // eslint-disable-next-line no-console\n      console.warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/control/ScaleLine\n */\nimport Control from './Control.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {METERS_PER_UNIT, getPointResolution} from '../proj.js';\nimport {assert} from '../asserts.js';\n\n/**\n * @type {string}\n */\nconst UNITS_PROP = 'units';\n\n/**\n * @typedef {'degrees' | 'imperial' | 'nautical' | 'metric' | 'us'} Units\n * Units for the scale line.\n */\n\n/**\n * @const\n * @type {Array<number>}\n */\nconst LEADING_DIGITS = [1, 2, 5];\n\n/**\n * @const\n * @type {number}\n */\nconst DEFAULT_DPI = 25.4 / 0.28;\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:units', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |'change:units', Return>} ScaleLineOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className] CSS class name. The default is `ol-scale-bar` when configured with\n * `bar: true`. Otherwise the default is `ol-scale-line`.\n * @property {number} [minWidth=64] Minimum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {number} [maxWidth] Maximum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {Units} [units='metric'] Units.\n * @property {boolean} [bar=false] Render scalebars instead of a line.\n * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers\n * for best results. Only applies when `bar` is `true`.\n * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies\n * when `bar` is `true`.\n * @property {number|undefined} [dpi=undefined] dpi of output device such as printer. Only applies\n * when `bar` is `true`. If undefined the OGC default screen pixel size of 0.28mm will be assumed.\n */\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n * When specifying `bar` as `true`, a scalebar will be rendered instead\n * of a scaleline.\n *\n * @api\n */\nclass ScaleLine extends Control {\n  /**\n   * @param {Options} [options] Scale line options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const element = document.createElement('div');\n    element.style.pointerEvents = 'none';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ScaleLineOnSignature<void>}\n     */\n    this.un;\n\n    const className =\n      options.className !== undefined\n        ? options.className\n        : options.bar\n        ? 'ol-scale-bar'\n        : 'ol-scale-line';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.innerElement_ = document.createElement('div');\n    this.innerElement_.className = className + '-inner';\n\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n    this.element.appendChild(this.innerElement_);\n\n    /**\n     * @private\n     * @type {?import(\"../View.js\").State}\n     */\n    this.viewState_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.maxWidth_ = options.maxWidth;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderedWidth_ = undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = '';\n\n    this.addChangeListener(UNITS_PROP, this.handleUnitsChanged_);\n\n    this.setUnits(options.units || 'metric');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBar_ = options.bar || false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.scaleBarSteps_ = options.steps || 4;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBarText_ = options.text || false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.dpi_ = options.dpi || undefined;\n  }\n\n  /**\n   * Return the units to use in the scale line.\n   * @return {Units} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n  getUnits() {\n    return this.get(UNITS_PROP);\n  }\n\n  /**\n   * @private\n   */\n  handleUnitsChanged_() {\n    this.updateElement_();\n  }\n\n  /**\n   * Set the units to use in the scale line.\n   * @param {Units} units The units to use in the scale line.\n   * @observable\n   * @api\n   */\n  setUnits(units) {\n    this.set(UNITS_PROP, units);\n  }\n\n  /**\n   * Specify the dpi of output device such as printer.\n   * @param {number|undefined} dpi The dpi of output device.\n   * @api\n   */\n  setDpi(dpi) {\n    this.dpi_ = dpi;\n  }\n\n  /**\n   * @private\n   */\n  updateElement_() {\n    const viewState = this.viewState_;\n\n    if (!viewState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const center = viewState.center;\n    const projection = viewState.projection;\n    const units = this.getUnits();\n    const pointResolutionUnits = units == 'degrees' ? 'degrees' : 'm';\n    let pointResolution = getPointResolution(\n      projection,\n      viewState.resolution,\n      center,\n      pointResolutionUnits\n    );\n\n    const minWidth =\n      (this.minWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI;\n\n    const maxWidth =\n      this.maxWidth_ !== undefined\n        ? (this.maxWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI\n        : undefined;\n\n    let nominalCount = minWidth * pointResolution;\n    let suffix = '';\n    if (units == 'degrees') {\n      const metersPerDegree = METERS_PER_UNIT.degrees;\n      nominalCount *= metersPerDegree;\n      if (nominalCount < metersPerDegree / 60) {\n        suffix = '\\u2033'; // seconds\n        pointResolution *= 3600;\n      } else if (nominalCount < metersPerDegree) {\n        suffix = '\\u2032'; // minutes\n        pointResolution *= 60;\n      } else {\n        suffix = '\\u00b0'; // degrees\n      }\n    } else if (units == 'imperial') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution /= 0.0254;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.3048;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.344;\n      }\n    } else if (units == 'nautical') {\n      pointResolution /= 1852;\n      suffix = 'NM';\n    } else if (units == 'metric') {\n      if (nominalCount < 0.001) {\n        suffix = 'μm';\n        pointResolution *= 1000000;\n      } else if (nominalCount < 1) {\n        suffix = 'mm';\n        pointResolution *= 1000;\n      } else if (nominalCount < 1000) {\n        suffix = 'm';\n      } else {\n        suffix = 'km';\n        pointResolution /= 1000;\n      }\n    } else if (units == 'us') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution *= 39.37;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.30480061;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.3472;\n      }\n    } else {\n      assert(false, 33); // Invalid units\n    }\n\n    let i = 3 * Math.floor(Math.log(minWidth * pointResolution) / Math.log(10));\n    let count, width, decimalCount;\n    let previousCount, previousWidth, previousDecimalCount;\n    while (true) {\n      decimalCount = Math.floor(i / 3);\n      const decimal = Math.pow(10, decimalCount);\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] * decimal;\n      width = Math.round(count / pointResolution);\n      if (isNaN(width)) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n        return;\n      }\n      if (maxWidth !== undefined && width >= maxWidth) {\n        count = previousCount;\n        width = previousWidth;\n        decimalCount = previousDecimalCount;\n        break;\n      } else if (width >= minWidth) {\n        break;\n      }\n      previousCount = count;\n      previousWidth = width;\n      previousDecimalCount = decimalCount;\n      ++i;\n    }\n    const html = this.scaleBar_\n      ? this.createScaleBar(width, count, suffix)\n      : count.toFixed(decimalCount < 0 ? -decimalCount : 0) + ' ' + suffix;\n\n    if (this.renderedHTML_ != html) {\n      this.innerElement_.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n\n    if (this.renderedWidth_ != width) {\n      this.innerElement_.style.width = width + 'px';\n      this.renderedWidth_ = width;\n    }\n\n    if (!this.renderedVisible_) {\n      this.element.style.display = '';\n      this.renderedVisible_ = true;\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} width The current width of the scalebar.\n   * @param {number} scale The current scale.\n   * @param {string} suffix The suffix to append to the scale text.\n   * @return {string} The stringified HTML of the scalebar.\n   */\n  createScaleBar(width, scale, suffix) {\n    const resolutionScale = this.getScaleForResolution();\n    const mapScale =\n      resolutionScale < 1\n        ? Math.round(1 / resolutionScale).toLocaleString() + ' : 1'\n        : '1 : ' + Math.round(resolutionScale).toLocaleString();\n    const steps = this.scaleBarSteps_;\n    const stepWidth = width / steps;\n    const scaleSteps = [this.createMarker('absolute')];\n    for (let i = 0; i < steps; ++i) {\n      const cls =\n        i % 2 === 0 ? 'ol-scale-singlebar-odd' : 'ol-scale-singlebar-even';\n      scaleSteps.push(\n        '<div>' +\n          '<div ' +\n          `class=\"ol-scale-singlebar ${cls}\" ` +\n          `style=\"width: ${stepWidth}px;\"` +\n          '>' +\n          '</div>' +\n          this.createMarker('relative') +\n          // render text every second step, except when only 2 steps\n          (i % 2 === 0 || steps === 2\n            ? this.createStepText(i, width, false, scale, suffix)\n            : '') +\n          '</div>'\n      );\n    }\n    // render text at the end\n    scaleSteps.push(this.createStepText(steps, width, true, scale, suffix));\n\n    const scaleBarText = this.scaleBarText_\n      ? `<div class=\"ol-scale-text\" style=\"width: ${width}px;\">` +\n        mapScale +\n        '</div>'\n      : '';\n    return scaleBarText + scaleSteps.join('');\n  }\n\n  /**\n   * Creates a marker at given position\n   * @param {'absolute'|'relative'} position The position, absolute or relative\n   * @return {string} The stringified div containing the marker\n   */\n  createMarker(position) {\n    const top = position === 'absolute' ? 3 : -10;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-marker\" ' +\n      `style=\"position: ${position}; top: ${top}px;\"` +\n      '></div>'\n    );\n  }\n\n  /**\n   * Creates the label for a marker marker at given position\n   * @param {number} i The iterator\n   * @param {number} width The width the scalebar will currently use\n   * @param {boolean} isLast Flag indicating if we add the last step text\n   * @param {number} scale The current scale for the whole scalebar\n   * @param {string} suffix The suffix for the scale\n   * @return {string} The stringified div containing the step text\n   */\n  createStepText(i, width, isLast, scale, suffix) {\n    const length =\n      i === 0 ? 0 : Math.round((scale / this.scaleBarSteps_) * i * 100) / 100;\n    const lengthString = length + (i === 0 ? '' : ' ' + suffix);\n    const margin = i === 0 ? -3 : (width / this.scaleBarSteps_) * -1;\n    const minWidth = i === 0 ? 0 : (width / this.scaleBarSteps_) * 2;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-text\" ' +\n      'style=\"' +\n      `margin-left: ${margin}px;` +\n      `text-align: ${i === 0 ? 'left' : 'center'};` +\n      `min-width: ${minWidth}px;` +\n      `left: ${isLast ? width + 'px' : 'unset'};` +\n      '\">' +\n      lengthString +\n      '</div>'\n    );\n  }\n\n  /**\n   * Returns the appropriate scale for the given resolution and units.\n   * @return {number} The appropriate scale.\n   */\n  getScaleForResolution() {\n    const resolution = getPointResolution(\n      this.viewState_.projection,\n      this.viewState_.resolution,\n      this.viewState_.center,\n      'm'\n    );\n    const dpi = this.dpi_ || DEFAULT_DPI;\n    const inchesPerMeter = 1000 / 25.4;\n    return resolution * inchesPerMeter * dpi;\n  }\n\n  /**\n   * Update the scale line element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.viewState_ = null;\n    } else {\n      this.viewState_ = frameState.viewState;\n    }\n    this.updateElement_();\n  }\n}\n\nexport default ScaleLine;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      transform\n    ) {\n      if (!transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to contruct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/control/ZoomToExtent\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoom-extent'] Class name.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string|HTMLElement} [label='E'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\n * @property {import(\"../extent.js\").Extent} [extent] The extent to zoom to. If undefined the validity\n * extent of the view projection is used.\n */\n\n/**\n * @classdesc\n * A button control which, when pressed, changes the map view to a specific\n * extent. To style this control use the css selector `.ol-zoom-extent`.\n *\n * @api\n */\nclass ZoomToExtent extends Control {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    /**\n     * @type {?import(\"../extent.js\").Extent|null}\n     * @protected\n     */\n    this.extent = options.extent ? options.extent : null;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom-extent';\n\n    const label = options.label !== undefined ? options.label : 'E';\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(\n      typeof label === 'string' ? document.createTextNode(label) : label\n    );\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleZoomToExtent();\n  }\n\n  /**\n   * @protected\n   */\n  handleZoomToExtent() {\n    const map = this.getMap();\n    const view = map.getView();\n    const extent = !this.extent\n      ? view.getProjection().getExtent()\n      : this.extent;\n    view.fitInternal(polygonFromExtent(extent));\n  }\n}\n\nexport default ZoomToExtent;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function () {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (dest === undefined) {\n      dest = [size, size];\n    } else {\n      dest[0] = size;\n      dest[1] = size;\n    }\n    return dest;\n  }\n}\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.startsWith('rgba(')) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.startsWith('rgb(')) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return HEX_COLOR_RE_.test(s) || s.startsWith('rgba(') || s.startsWith('rgb(');\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1);\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n    } catch (e) {\n      this.handleImageError_();\n    }\n    this.unlisten_ = listenImage(\n      this.image_,\n      this.handleImageLoad_.bind(this),\n      this.handleImageError_.bind(this)\n    );\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not.\n * The provided `imgSize` needs to match the actual size of the image.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|undefined}\n     */\n    this.imgSize_ = options.imgSize;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && this.imgSize_), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      this.imgSize_ !== undefined ? this.imgSize_ : null,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      imgSize: this.imgSize_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:source'|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {VOID} from './functions.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // Store a copy of the down event\n    this.down_ = /** @type {PointerEvent} */ ({});\n    for (const property in pointerEvent) {\n      const value = pointerEvent[property];\n      this.down_[property] = typeof value === 'function' ? VOID : value;\n    }\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging\n      )\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  tolerance = tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (\n        layerState.layer\n      ).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(event.element);\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      function (event) {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {Map}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {Map}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const targetElement = this.getTargetElement();\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const defaultView = this.getOwnerDocument().defaultView;\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(defaultView, EventType.RESIZE, this.updateSize, this),\n      ];\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          // eslint-disable-next-line\n          console.warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    this.setSize(size);\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(\n        function (triangle) {\n          if (\n            Math.max(\n              triangle.source[0][0],\n              triangle.source[1][0],\n              triangle.source[2][0]\n            ) -\n              leftBound >\n            this.sourceWorldWidth_ / 2\n          ) {\n            const newTriangle = [\n              [triangle.source[0][0], triangle.source[0][1]],\n              [triangle.source[1][0], triangle.source[1][1]],\n              [triangle.source[2][0], triangle.source[2][1]],\n            ];\n            if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[0][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[1][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[2][0] -= this.sourceWorldWidth_;\n            }\n\n            // Rarely (if the extent contains both the dateline and prime meridian)\n            // the shift can in turn break some triangles.\n            // Detect this here and don't shift in such cases.\n            const minX = Math.min(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            const maxX = Math.max(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            if (maxX - minX < this.sourceWorldWidth_ / 2) {\n              triangle.source = newTriangle;\n            }\n          }\n        }.bind(this)\n      );\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution)\n  );\n\n  if (!interpolate) {\n    stitchContext.imageSmoothingEnabled = false;\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {boolean} [interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(\n      function (tile, i, arr) {\n        if (tile && tile.getState() == TileState.LOADED) {\n          sources.push({\n            extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n            image: tile.getImage(),\n          });\n        }\n      }.bind(this)\n    );\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(\n        function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE || state == TileState.LOADING) {\n            leftToLoad++;\n\n            const sourceListenKey = listen(\n              tile,\n              EventType.CHANGE,\n              function (e) {\n                const state = tile.getState();\n                if (\n                  state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY\n                ) {\n                  unlistenByKey(sourceListenKey);\n                  leftToLoad--;\n                  if (leftToLoad === 0) {\n                    this.unlistenSources_();\n                    this.reproject_();\n                  }\n                }\n              },\n              this\n            );\n            this.sourcesListenerKeys_.push(sourceListenKey);\n          }\n        }.bind(this)\n      );\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  peek(key) {\n    if (!this.containsKey(key)) {\n      return undefined;\n    }\n    return this.entries_[key].value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(\n      function (tile) {\n        if (tile.tileCoord[0] !== z) {\n          this.remove(getKey(tile.tileCoord));\n          tile.release();\n        }\n      }.bind(this)\n    );\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link module:ol/Map~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../Map.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, tempExtent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n    return createOrUpdateTileRange(\n      minX,\n      tileCoord[1],\n      minY,\n      tileCoord[2],\n      tempTileRange\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    if (!this.tileGrid) {\n      return null;\n    }\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template\n          .replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function () {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    } else {\n      return super.getOpaque(projection);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] =\n          getTileGridForProjection(projection);\n      }\n      return this.tileGridForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(\n          this.tileCache.highWaterMark\n        );\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = cache.get(tileCoordKey);\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n          tileCoord,\n          projection\n        );\n        const newTile = new ReprojTile(\n          sourceProjection,\n          sourceTileGrid,\n          projection,\n          targetTileGrid,\n          tileCoord,\n          wrappedTileCoord,\n          this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function (z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this),\n          this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_,\n          this.getInterpolate()\n        );\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [options] Open Street Map options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: options.interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/Overlay\n */\nimport BaseObject from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {containsExtent} from './extent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {outerHeight, outerWidth, removeChildren, removeNode} from './dom.js';\n\n/**\n * @typedef {'bottom-left' | 'bottom-center' | 'bottom-right' | 'center-left' | 'center-center' | 'center-right' | 'top-left' | 'top-center' | 'top-right'} Positioning\n * The overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, or `'top-right'`.\n */\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {Positioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     // ...\n *     const popup = new Overlay({\n *       element: document.getElementById('popup'),\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {OverlayOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|undefined}\n     */\n    this.autoPan = options.autoPan === true ? {} : options.autoPan || undefined;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning || 'top-left');\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./Map.js\").default|null} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./Map.js\").default|null} */ (\n      this.get(Property.MAP) || null\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {Positioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {Positioning} */ (this.get(Property.POSITIONING));\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./Map.js\").default|null} map The map that the\n   * overlay is part of. Pass `null` to just remove the overlay from the current map.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    panIntoViewOptions = panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n          map.getView().getCenterInternal()\n        );\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {Positioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == 'bottom-right' ||\n      positioning == 'center-right' ||\n      positioning == 'top-right'\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == 'bottom-center' ||\n      positioning == 'center-center' ||\n      positioning == 'top-center'\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == 'bottom-left' ||\n      positioning == 'bottom-center' ||\n      positioning == 'bottom-right'\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == 'center-left' ||\n      positioning == 'center-center' ||\n      positioning == 'center-right'\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    if (!size) {\n      return null;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distnce from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvas_ = {};\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source'|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   'change:source'|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  const canvas = document.createElement('canvas');\n  canvas.width = 1;\n  canvas.height = 1;\n  pixelContext = canvas.getContext('2d');\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (!(tile instanceof ImageTile || tile instanceof ReprojTile)) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection)\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json' || type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector\").default}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default<Geometry>>|Collection<import(\"../Feature.js\").default<Geometry>>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<Geometry>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */\n    let collection;\n    /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = function (feature) {\n          this.removeFeatureInternal(feature);\n        }.bind(this);\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent))\n      );\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.uidIndex_;\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          function (features) {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          }.bind(this),\n          function () {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }.bind(this)\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/style/flat\n */\n\nimport Circle from '../style/Circle.js';\nimport Fill from './Fill.js';\nimport Icon from './Icon.js';\nimport RegularShape from './RegularShape.js';\nimport Stroke from './Stroke.js';\nimport Style from './Style.js';\nimport Text from './Text.js';\n\n/**\n * For static styling, the [layer.setStyle()]{@link module:ol/layer/Vector~VectorLayer#setStyle} method\n * can be called with an object literal that has fill, stroke, text, icon, regular shape, and/or circle properties.\n * @api\n *\n * @typedef {FlatFill & FlatStroke & FlatText & FlatIcon & FlatShape & FlatCircle} FlatStyle\n */\n\n/**\n * A flat style literal or an array of the same.\n *\n * @typedef {FlatStyle|Array<FlatStyle>} FlatStyleLike\n */\n\n/**\n * Fill style properties applied to polygon features.\n *\n * @typedef {Object} FlatFill\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [fill-color] The fill color.\n */\n\n/**\n * Stroke style properties applied to line strings and polygon boundaries.  To apply a stroke, at least one of\n * `stroke-color` or `stroke-width` must be provided.\n *\n * @typedef {Object} FlatStroke\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [stroke-color] The stroke color.\n * @property {number} [stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [stroke-line-dash] Line dash pattern.\n * @property {number} [stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [stroke-miter-limit=10] Miter limit.\n */\n\n/**\n * Label style properties applied to all features.  At a minimum, a `text-value` must be provided.\n *\n * @typedef {Object} FlatText\n * @property {string|Array<string>} [text-value] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {string} [text-font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [text-max-angle=Math.PI/4] When `text-placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [text-offset-x=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [text-offset-y=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [text-overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./Text.js\").TextPlacement} [text-placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [text-scale] Scale.\n * @property {boolean} [text-rotate-with-view=false] Whether to rotate the text with the view.\n * @property {number} [text-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {CanvasTextAlign} [text-align] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `text-placement: 'point'`. For `text-placement: 'line'`, the default is to let the renderer choose a\n * placement where `text-max-angle` is not exceeded.\n * @property {import('./Text.js').TextJustify} [text-justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `text-justify` is ignored for immediate rendering and also for `text-placement: 'line'`.\n * @property {CanvasTextBaseline} [text-baseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {Array<number>} [text-padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-stroke-line-dash] Line dash pattern.\n * @property {number} [text-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-stroke-width] Stroke pixel width.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-background-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-background-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-background-stroke-line-dash] Line dash pattern.\n * @property {number} [text-background-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-background-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-background-stroke-width] Stroke pixel width.\n */\n\n/**\n * Icon style properties applied to point features.  One of `icon-src` or `icon-img` must be provided to render\n * points with an icon.\n *\n * @typedef {Object} FlatIcon\n * @property {string} [icon-src] Image source URI.\n * @property {HTMLImageElement|HTMLCanvasElement} [icon-img] Image object for the icon. If the `icon-src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `icon-img-size` option.\n * @property {import(\"../size.js\").Size} [icon-img-size] Image size in pixels. Only required if `icon-img` is set and `icon-src` is not.\n * The provided size needs to match the actual size of the image.\n * @property {Array<number>} [icon-anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-anchor-origin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-x-units='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-y-units='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [icon-color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [icon-cross-origin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `icon-cross-origin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Array<number>} [icon-offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [icon-displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-offset-origin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [icon-opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [icon-scale=1] Scale.\n * @property {number} [icon-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [icon-rotate-with-view=false] Whether to rotate the icon with the view.\n * @property {import(\"../size.js\").Size} [icon-size] Icon size in pixel. Can be used together with `icon-offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [icon-declutter-mode] Declutter mode\n */\n\n/**\n * Regular shape style properties for rendering point features.  At least `shape-points` must be provided.\n *\n * @typedef {Object} FlatShape\n * @property {number} [shape-points] Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-stroke-color] The stroke color.\n * @property {number} [shape-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [shape-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [shape-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [shape-stroke-line-dash] Line dash pattern.\n * @property {number} [shape-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [shape-stroke-miter-limit=10] Miter limit.\n * @property {number} [shape-radius] Radius of a regular polygon.\n * @property {number} [shape-radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [shape-radius2] Second radius of a star.\n * @property {number} [shape-angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [shape-displacement=[0,0]] Displacement of the shape\n * @property {number} [shape-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [shape-rotate-with-view=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [shape-scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `shape-radius`, `shape-radius1` and `shape-radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [shape-declutter-mode] Declutter mode.\n */\n\n/**\n * Circle style properties for rendering point features.  At least `circle-radius` must be provided.\n *\n * @typedef {Object} FlatCircle\n * @property {number} [circle-radius] Circle radius.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-stroke-color] The stroke color.\n * @property {number} [circle-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [circle-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [circle-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [circle-stroke-line-dash] Line dash pattern.\n * @property {number} [circle-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [circle-stroke-miter-limit=10] Miter limit.\n * @property {Array<number>} [circle-displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [circle-scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `circle-radius`.\n * @property {number} [circle-rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [circle-rotate-with-view=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [circle-declutter-mode] Declutter mode\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @return {import(\"./Style.js\").default} A style instance.\n */\nexport function toStyle(flatStyle) {\n  const style = new Style({\n    fill: getFill(flatStyle, ''),\n    stroke: getStroke(flatStyle, ''),\n    text: getText(flatStyle),\n    image: getImage(flatStyle),\n  });\n\n  return style;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Fill|undefined} The fill (if any).\n */\nfunction getFill(flatStyle, prefix) {\n  const color = flatStyle[prefix + 'fill-color'];\n  if (!color) {\n    return;\n  }\n\n  return new Fill({color: color});\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Stroke|undefined} The stroke (if any).\n */\nfunction getStroke(flatStyle, prefix) {\n  const width = flatStyle[prefix + 'stroke-width'];\n  const color = flatStyle[prefix + 'stroke-color'];\n  if (!width && !color) {\n    return;\n  }\n\n  return new Stroke({\n    width: width,\n    color: color,\n    lineCap: flatStyle[prefix + 'stroke-line-cap'],\n    lineJoin: flatStyle[prefix + 'stroke-line-join'],\n    lineDash: flatStyle[prefix + 'stroke-line-dash'],\n    lineDashOffset: flatStyle[prefix + 'stroke-line-dash-offset'],\n    miterLimit: flatStyle[prefix + 'stroke-miter-limit'],\n  });\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {Text|undefined} The text (if any).\n */\nfunction getText(flatStyle) {\n  const value = flatStyle['text-value'];\n  if (!value) {\n    return;\n  }\n\n  const text = new Text({\n    text: value,\n    font: flatStyle['text-font'],\n    maxAngle: flatStyle['text-max-angle'],\n    offsetX: flatStyle['text-offset-x'],\n    offsetY: flatStyle['text-offset-y'],\n    overflow: flatStyle['text-overflow'],\n    placement: flatStyle['text-placement'],\n    scale: flatStyle['text-scale'],\n    rotateWithView: flatStyle['text-rotate-with-view'],\n    rotation: flatStyle['text-rotation'],\n    textAlign: flatStyle['text-align'],\n    justify: flatStyle['text-justify'],\n    textBaseline: flatStyle['text-baseline'],\n    padding: flatStyle['text-padding'],\n    fill: getFill(flatStyle, 'text-'),\n    backgroundFill: getFill(flatStyle, 'text-background-'),\n    stroke: getStroke(flatStyle, 'text-'),\n    backgroundStroke: getStroke(flatStyle, 'text-background-'),\n  });\n\n  return text;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {import(\"./Image.js\").default|undefined} The image (if any).\n */\nfunction getImage(flatStyle) {\n  const iconSrc = flatStyle['icon-src'];\n  const iconImg = flatStyle['icon-img'];\n  if (iconSrc || iconImg) {\n    const icon = new Icon({\n      src: iconSrc,\n      img: iconImg,\n      imgSize: flatStyle['icon-img-size'],\n      anchor: flatStyle['icon-anchor'],\n      anchorOrigin: flatStyle['icon-anchor-origin'],\n      anchorXUnits: flatStyle['icon-anchor-x-units'],\n      anchorYUnits: flatStyle['icon-anchor-y-units'],\n      color: flatStyle['icon-color'],\n      crossOrigin: flatStyle['icon-cross-origin'],\n      offset: flatStyle['icon-offset'],\n      displacement: flatStyle['icon-displacement'],\n      opacity: flatStyle['icon-opacity'],\n      scale: flatStyle['icon-scale'],\n      rotation: flatStyle['icon-rotation'],\n      rotateWithView: flatStyle['icon-rotate-with-view'],\n      size: flatStyle['icon-size'],\n      declutterMode: flatStyle['icon-declutter-mode'],\n    });\n    return icon;\n  }\n\n  const shapePoints = flatStyle['shape-points'];\n  if (shapePoints) {\n    const prefix = 'shape-';\n    const shape = new RegularShape({\n      points: shapePoints,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      radius: flatStyle['shape-radius'],\n      radius1: flatStyle['shape-radius1'],\n      radius2: flatStyle['shape-radius2'],\n      angle: flatStyle['shape-angle'],\n      displacement: flatStyle['shape-displacement'],\n      rotation: flatStyle['shape-rotation'],\n      rotateWithView: flatStyle['shape-rotate-with-view'],\n      scale: flatStyle['shape-scale'],\n      declutterMode: flatStyle['shape-declutter-mode'],\n    });\n\n    return shape;\n  }\n\n  const circleRadius = flatStyle['circle-radius'];\n  if (circleRadius) {\n    const prefix = 'circle-';\n    const circle = new Circle({\n      radius: circleRadius,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      displacement: flatStyle['circle-displacement'],\n      scale: flatStyle['circle-scale'],\n      rotation: flatStyle['circle-rotation'],\n      rotateWithView: flatStyle['circle-rotate-with-view'],\n      declutterMode: flatStyle['circle-declutter-mode'],\n    });\n\n    return circle;\n  }\n\n  return;\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {toStyle} from '../style/flat.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use \"flat\" style object literals instead of\n   * using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.).  See the documentation\n   * for the [flat style types]{@link module:ol/style/flat~FlatStyle} to see what properties are supported.\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleLike|null}\n     */\n    let styleLike;\n\n    if (style === undefined) {\n      styleLike = createDefaultStyle;\n    } else if (style === null) {\n      styleLike = null;\n    } else if (typeof style === 'function') {\n      styleLike = style;\n    } else if (style instanceof Style) {\n      styleLike = style;\n    } else if (Array.isArray(style)) {\n      const len = style.length;\n\n      /**\n       * @type {Array<Style>}\n       */\n      const styles = new Array(len);\n\n      for (let i = 0; i < len; ++i) {\n        const s = style[i];\n        if (s instanceof Style) {\n          styles[i] = s;\n        } else {\n          styles[i] = toStyle(s);\n        }\n      }\n      styleLike = styles;\n    } else {\n      styleLike = toStyle(style);\n    }\n\n    this.style_ = styleLike;\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(\n            textState.maxAngle,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (let i = flatOffset; i < flatEnd; i += stride) {\n          coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        const end = coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end);\n        begin = end;\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    builderTypes = builderTypes ? builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = '#' + ('000000' + index.toString(16)).slice(-6);\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      byGeometryType[geometry.getType().replace('Multi', '')].push(\n        geometry,\n        style\n      );\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex)\n    .map(Number)\n    .sort(numberSafeCompareFunction);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.compositionContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.compositionContext_;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  setupCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const compositionContext = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool\n      );\n      this.compositionContext_ = compositionContext;\n    } else {\n      this.compositionContext_ = this.context;\n    }\n  }\n\n  releaseCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.context.globalAlpha;\n      this.context.globalAlpha = this.opacity_;\n      this.context.drawImage(this.compositionContext_.canvas, 0, 0);\n      this.context.globalAlpha = alpha;\n      releaseCanvas(this.compositionContext_);\n      canvasPool.push(this.compositionContext_.canvas);\n      this.compositionContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.setupCompositionContext_();\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n      this.releaseCompositionContext_();\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      return null;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    this.opacity_ = layerState.opacity;\n    this.setupCompositionContext_();\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      this.compositionContext_.restore();\n    }\n\n    this.releaseCompositionContext_();\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise(\n      /**\n       * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (resolve) {\n        if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n          const size = [this.context.canvas.width, this.context.canvas.height];\n          apply(this.pixelTransform, size);\n          const center = this.renderedCenter_;\n          const resolution = this.renderedResolution_;\n          const rotation = this.renderedRotation_;\n          const projection = this.renderedProjection_;\n          const extent = this.wrappedRenderedExtent_;\n          const layer = this.getLayer();\n          const transforms = [];\n          const width = size[0] * HIT_DETECT_RESOLUTION;\n          const height = size[1] * HIT_DETECT_RESOLUTION;\n          transforms.push(\n            this.getRenderTransform(\n              center,\n              resolution,\n              rotation,\n              HIT_DETECT_RESOLUTION,\n              width,\n              height,\n              0\n            ).slice()\n          );\n          const source = layer.getSource();\n          const projectionExtent = projection.getExtent();\n          if (\n            source.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, extent)\n          ) {\n            let startX = extent[0];\n            const worldWidth = getWidth(projectionExtent);\n            let world = 0;\n            let offsetX;\n            while (startX < projectionExtent[0]) {\n              --world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n              ++world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX -= worldWidth;\n            }\n          }\n\n          this.hitDetectionImageData_ = createHitDetectionImageData(\n            size,\n            transforms,\n            this.renderedFeatures_,\n            layer.getStyleFunction(),\n            extent,\n            resolution,\n            rotation\n          );\n        }\n        resolve(\n          hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n        );\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup &&\n          frameState.declutterTree\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          ready = ready && !dirty;\n        }\n      }.bind(this);\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/*\n * μlogger\n *\n * Copyright(C) 2019 Bartek Fabiszewski (www.fabiszewski.net)\n *\n * This is free software; you can redistribute it and/or modify it under\n * the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { Control, Rotate, ScaleLine, Zoom, ZoomToExtent } from 'ol/control';\nimport { LineString, Point } from 'ol/geom';\nimport { fromLonLat, toLonLat } from 'ol/proj';\nimport Feature from 'ol/Feature';\nimport Icon from 'ol/style/Icon';\nimport Map from 'ol/Map';\nimport OSM from 'ol/source/OSM';\nimport Overlay from 'ol/Overlay';\nimport Stroke from 'ol/style/Stroke';\nimport Style from 'ol/style/Style';\nimport TileLayer from 'ol/layer/Tile';\nimport Vector from 'ol/source/Vector';\nimport VectorLayer from 'ol/layer/Vector';\nimport View from 'ol/View';\nimport XYZ from 'ol/source/XYZ';\nimport { containsCoordinate } from 'ol/extent.js';\n\nexport { Feature, Map, Overlay, View };\nexport const control = { Control, Rotate, ScaleLine, Zoom, ZoomToExtent };\nexport const extent = { containsCoordinate };\nexport const geom = { LineString, Point };\nexport const layer = { TileLayer, VectorLayer };\nexport const proj = { fromLonLat, toLonLat };\nexport const source = { OSM, Vector, XYZ };\nexport const style = { Icon, Stroke, Style };\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n"],"names":["constructor","type","this","propagationStopped","defaultPrevented","target","preventDefault","stopPropagation","disposed","dispose","disposeInternal","numberSafeCompareFunction","a","b","linearFindNearest","arr","direction","n","length","i","reverseSubArray","begin","end","tmp","extend","data","extension","Array","isArray","equals","arr1","arr2","len1","TRUE","FALSE","VOID","clear","object","property","isEmpty","Disposable","super","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","includes","push","dispatchEvent","event","isString","evt","Event","dispatching","pendingRemovals","propagate","ii","handleEvent","call","pr","removeEventListener","getListeners","undefined","hasListener","Object","keys","index","indexOf","splice","listen","thisArg","once","bind","originalListener","apply","arguments","eventsKey","listenOnce","unlistenByKey","key","Observable","EventTarget","on","onInternal","onceInternal","un","unInternal","revision_","changed","EventType","getRevision","len","ol_key","unByKey","prototype","abstract","Error","uidCounter_","getUid","obj","ol_uid","String","VERSION","ObjectEvent","oldValue","values","values_","setProperties","get","value","hasOwnProperty","getKeys","getProperties","assign","hasProperties","notify","eventType","ObjectEventType","addChangeListener","removeChangeListener","set","silent","applyProperties","source","unset","ua","navigator","userAgent","toLowerCase","FIREFOX","WEBKIT","test","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","self","IMAGE_DECODE","Image","decode","PASSIVE_EVENT_LISTENERS","passive","options","defineProperty","window","error","createCanvasContext2D","width","height","canvasPool","settings","canvas","shift","document","createElement","getContext","releaseCanvas","context","clearRect","outerWidth","element","offsetWidth","style","getComputedStyle","parseInt","marginLeft","marginRight","outerHeight","offsetHeight","marginTop","marginBottom","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChild","removeChildren","lastChild","BaseObject","pointerEvents","target_","map_","listenerKeys","render","setTarget","getMap","setMap","map","getOverlayContainerStopEvent","appendChild","MapEventType","mapEvent","getElementById","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","join","fontRegExMatchIndex","getFontParameters","fontSpec","match","lineHeight","size","weight","variant","families","family","split","easeIn","t","Math","pow","easeOut","inAndOut","linear","Control","className","label","compassClassName","label_","textContent","classList","add","tipLabel","button","setAttribute","title","handleClick_","cssClasses","callResetNorth_","resetNorth","duration_","duration","autoHide_","autoHide","rotation_","resetNorth_","view","getView","rotation","getRotation","PI","animate","easing","setRotation","frameState","viewState","transform","contains","remove","METERS_PER_UNIT","code_","code","units_","units","extent_","extent","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","log","tan","EPSG3857Projection","Projection","resolution","point","cosh","PROJECTIONS","fromEPSG4326","input","output","dimension","slice","y","toEPSG4326","atan","exp","EPSG4326Projection","cache","transforms","destination","transformFn","sourceCode","destinationCode","AssertionError","message","name","assert","assertion","errorCode","boundingExtent","coordinates","createEmpty","extendCoordinate","buffer","dest","clone","closestSquaredDistanceXY","x","dx","dy","containsCoordinate","coordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","minX","minY","maxX","maxY","relationship","Relationship","Infinity","createOrUpdate","createOrUpdateEmpty","extendFlatCoordinates","flatCoordinates","offset","stride","extendXY","min","max","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getWidth","getHeight","getCenter","getCorner","corner","getForViewAndSize","center","x0","y0","x1","y1","x2","y2","x3","y3","getRotatedViewport","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","getIntersection","intersection","intersects","applyTransform","stops","xs","ys","l","_boundingExtentXYs","wrapX","projection","projectionExtent","worldWidth","floor","clamp","squaredSegmentDistance","squaredDistance","toRadians","angleInDegrees","modulo","r","lerp","toFixed","decimals","factor","round","ceil","coordinate1","coordinate2","rotate","angle","cosAngle","sinAngle","worldsAway","sourceExtentWidth","getWorldsAway","DEFAULT_RADIUS","getDistance","c1","c2","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","sqrt","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","projectionLike","replace","pointResolution","getter","projUnits","getTransformFromProjections","vertices","addEquivalentProjections","projections","forEach","addProjections","createProjection","defaultCode","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransformFunc","getTransform","transformExtent","userProjection","getUserProjection","toUserCoordinate","fromUserCoordinate","destProjection","console","warn","toUserExtent","fromUserExtent","toUserResolution","sourceUnits","userUnits","projections2","forwardTransform","inverseTransform","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","UNITS_PROP","LEADING_DIGITS","DEFAULT_DPI","bar","innerElement_","viewState_","minWidth_","minWidth","maxWidth_","maxWidth","renderedVisible_","renderedWidth_","renderedHTML_","handleUnitsChanged_","setUnits","scaleBar_","scaleBarSteps_","steps","scaleBarText_","text","dpi_","dpi","updateElement_","setDpi","display","pointResolutionUnits","nominalCount","suffix","metersPerDegree","count","decimalCount","previousCount","previousWidth","previousDecimalCount","decimal","isNaN","html","createScaleBar","innerHTML","scale","resolutionScale","getScaleForResolution","mapScale","toLocaleString","stepWidth","scaleSteps","createMarker","cls","createStepText","position","top","isLast","lengthString","margin","delta","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","getZoom","newZoom","getConstrainedZoom","getAnimating","cancelAnimations","zoom","setZoom","c","d","e","f","compose","dx1","dy1","sx","sy","dx2","dy2","makeInverse","det","mat","transformStringDiv","toString","transformString","transform2D","j","anchor","anchorX","anchorY","deltaX","deltaY","k","tmpTransform","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","fn","lastResult","lastArgs","lastThis","called","nextArgs","arrayEquals","memoizeOne","revision","squaredTolerance","getSimplifiedGeometry","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","coord","getClosestPoint","NaN","intersectsCoordinate","computeExtent","returnOrUpdate","simplify","tolerance","getType","intersectsExtent","translate","sourceProj","getProjection","inCoordinates","outCoordinates","pixelExtent","projectedExtent","composeTransform","getStrideForLayout","layout","Geometry","createOrUpdateFromFlatCoordinates","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","setCoordinates","setLayout","nesting","getLayoutForStride","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","arrayMaxSquaredDelta","ends","assignClosestPoint","maxDelta","isRing","tmpPoint","assignClosestArrayPoint","deflateCoordinates","deflateCoordinatesArray","coordinatess","jj","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","pop","first","maxSquaredDistance","snap","quantize","quantizeArray","simplifiedEnds","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","endss","coordinatesss","linearRing","twiceArea","linearRings","LinearRing","SimpleGeometry","maxDelta_","maxDeltaRevision_","linearRingArea","Point","createOrUpdateFromCoordinate","deflateCoordinate","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","sort","segmentLength","abs","ret","intersectsLineString","coordinatesExtent","forEachSegment","point1","point2","start","startRel","endRel","startX","startY","endX","endY","slope","intersectsSegment","intersectsLinearRing","intersectsLinearRingArray","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","orientLinearRings","reverseCoordinates","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","polygon","getOrientedFlatCoordinates","linearRingsArea","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","fromExtent","handleZoomToExtent","fitInternal","polygonFromExtent","interpolatePoint","fraction","o","cumulativeLengths","haystack","needle","comparator","mid","cmp","low","high","found","binarySearch","lineStringCoordinateAtM","m","extrapolate","lo","hi","m0","lineStringLength","LineString","flatMidpoint_","flatMidpointRevision_","appendCoordinate","lineString","getCoordinateAtM","getCoordinateAt","getLength","getFlatMidpoint","Feature","geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","geometry","setGeometry","properties","setGeometryName","getGeometryName","getGeometry","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","styles","getZIndex","createStyleFunction","setId","id","hasArea","toSize","ImageStyle","opacity_","opacity","rotateWithView_","rotateWithView","scale_","scaleArray_","displacement_","displacement","declutterMode_","declutterMode","getScale","getOpacity","getRotateWithView","getDisplacement","getDeclutterMode","getScaleArray","getAnchor","getImage","pixelRatio","getHitDetectionImage","getPixelRatio","getImageState","getImageSize","getOrigin","getSize","setDisplacement","setOpacity","setRotateWithView","setScale","listenImageChange","load","unlistenImageChange","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","fromNamed","el","body","rgb","fromString","cacheSize","s","g","exec","hasAlpha","substr","startsWith","Number","normalize","fromStringInternal_","asArray","IconImageCache","cache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","src","crossOrigin","getKey","setSize","maxCacheSize","shared","listenImage","image","loadHandler","errorHandler","img","listening","decoding","loaded","then","catch","taintedTestContext","IconImage","imageState","hitDetectionImage_","image_","crossOrigin_","canvas_","color_","unlisten_","imageState_","size_","src_","tainted_","initializeImage_","isTainted_","ImageState","drawImage","getImageData","dispatchChangeEvent_","handleImageError_","unlistenImage_","handleImageLoad_","replaceColor_","fillRect","getSrc","ctx","globalCompositeOperation","fillStyle","Icon","anchor_","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","imgSize_","imgSize","iconImage_","iconImageCache","getIconImage","offset_","offsetOrigin_","offsetOrigin","origin_","setAnchor","getColor","iconImageSize","Property","CollectionEvent","array","unique_","unique","array_","assertUnique_","updateLength_","getArray","item","insertAt","elem","CollectionEventType","removeAt","prev","setAt","except","background_","background","LayerProperty","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","state_","getBackground","getClassName","getLayerState","managed","state","layer","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","getLayerStatesArray","states","getSourceState","setBackground","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setVisible","setZIndex","zindex","inView","layerState","BaseLayer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","rendered","handleSourcePropertyChange_","setSource","getSource","getRenderSource","getState","handleSourceChange_","getFeatures","pixel","Promise","resolve","getData","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","setMapInternal","getMapInternal","RenderEventType","layerStatesArray","some","arrayLayerState","createRenderer","hasRenderer","expireIconCache","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","layerFilter","thisArg2","result","feature","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","getWrapX","order","distanceSq","hasFeatureAtCoordinate","scheduleExpireIconCache","postRenderFunctions","inversePixelTransform","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineJoin","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","checkedFonts","measureFont","measureContext","textHeights","registerFont","referenceFonts","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","font","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","minHeight","maxHeight","padding","border","left","measureAndCacheTextWidth","reduce","curr","drawImageOrLabel","labelOrImage","originX","originY","w","h","save","globalAlpha","setTransform","contextInstructions","executeLabelInstructions","restore","MapRenderer","fontChangeListenerKey_","redrawText","element_","container","getViewport","insertBefore","firstChild","children_","RenderEvent","declutterLayers","previousElement","layerIndex","sourceState","renderDeclutter","children","oldChildren","childNodes","oldChild","newChild","replaceChildren","GroupEvent","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","Collection","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","collection","currentLayers","pos","ownLayerState","defaultZIndex","MapEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","getEventPixel","getCoordinateFromPixel","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","Target","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","PointerEventType","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","pointerEvent","newEvent","MapBrowserEvent","MapBrowserEventType","clearTimeout","setTimeout","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","DROP","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","PriorityQueue","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tile","TileState","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","CENTER","RESOLUTION","ROTATION","DEFAULT_TILE_SIZE","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","none","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","createMinMaxResolution","cappedMaxRes","animationCallback","returnValue","isNoopAnimation","animation","sourceCenter","targetCenter","coordinatesEqual","sourceResolution","targetResolution","sourceRotation","targetRotation","calculateCenterOn","rotX","rotY","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","ViewProperty","resolutionConstraintInfo","resolutionConstraint","defaultMaxZoom","defaultZoomFactor","zoomFactor","multiWorld","smoothResolutionConstraint","projExtent","constrainOnlyCenter","resolutions","constrainResolution","capped","z","createSnapToResolutions","defaultMaxResolution","defaultMinResolution","power","minZoomLevel","cappedZoomLevel","zoomLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","minZoom_","centerConstraint","smoothExtentConstraint","centerNone","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","rotationNone","theta","createSnapToN","createRotationConstraint","constraints_","setCenterInternal","setResolution","oldPadding","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","getCenterInternal","var_args","isDef","resolveConstraints","args","animateInternal","animationCount","Date","now","series","complete","getResolutionForZoom","setHint","ViewHint","updateAnimations_","getInteracting","cancelAnimationFrame","more","seriesComplete","elapsed","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","rotateCoordinate","currentResolution","setViewportSize","getConstraints","getConstrainResolution","getHints","hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","nextCenter","nextResolution","nextRotation","nearest","baseLevel","fit","geometryOrExtent","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","targetZoom","targetRes","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","expandClassName","collapseLabel","collapseClassName","collapseLabel_","activeLabel","toggleButton_","renderedAttributions_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","handleToggle_","toggle","getCollapsible","setCollapsed","getCollapsed","zoomByDelta","setActive","getActive","InteractionProperty","mapBrowserEvent","active","Interaction","delta_","stopEvent","browserEvent","shiftKey","centroid","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","all","conditions","pass","altShiftKeysOnly","altKey","metaKey","ctrlKey","focusWithTabindex","getTargetElement","hasAttribute","targetElement","activeElement","focus","always","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","primaryAction","isPrimary","PointerInteraction","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","centroidFromPointers","update","scaleCoordinate","distance","getAngle","centerpx","getPixelFromCoordinateInternal","getCoordinateFromPixelInternal","lastAngle_","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","getOverlayContainer","setPixels","createOrUpdateGeometry","DragBoxEventType","DragBoxEvent","box_","RenderBox","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","DragBox","out_","out","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","keyCode","KeyCode","mapUnitsDelta","pan","charCode","charCodeAt","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","pointerOptions","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","viewportPosition","getBoundingClientRect","lastDistance_","lastScaleDelta_","scaleDelta","removeLayerMapProperty","Layer","setLayerMapProperty","optionsInternal","keyboardEventTarget","layerGroup","controls","interactions","overlays","MapProperty","View","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","Zoom","zoomOptions","Rotate","rotateOptions","attribution","Attribution","attributionOptions","defaultControls","Kinetic","altShiftDragRotate","DragRotate","doubleClickZoom","DoubleClickZoom","zoomDelta","zoomDuration","dragPan","DragPan","pinchRotate","PinchRotate","pinchZoom","PinchZoom","keyboard","KeyboardPan","KeyboardZoom","mouseWheelZoom","MouseWheelZoom","shiftDragZoom","DragZoom","defaultInteractions","overlays_","overlayIdIndex_","postRenderFunctions_","tileQueue_","TileQueue","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","viewOptions","setView","addOverlayInternal_","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","handleLayerAdd_","addOverlay","overlay","getOverlays","forEachFeatureAtPixel","getFeaturesAtPixel","features","getAllLayers","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","eventPosition","changedTouches","getTarget","getOverlayById","group","getLoadingOrNotReady","renderer","ready","loading","getPixelFromCoordinate","viewCoordinate","ownerDocument","tileSourceKey","tileCenter","tileResolution","wantedTiles","handleMapBrowserEvent","rootNode","documentElement","interactionsArray","handlePostRender","tileQueue","viewHints","lowOnFrameBudget","time","CompositeMapRenderer","MapBrowserEventHandler","defaultView","updateSize","handleViewPropertyChanged_","updateViewportSize_","handleLayerRemove_","isRendered","renderFrame_","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","usedTiles","mapId","renderTargets","nextExtent","setLayerGroup","oldLayerGroup","computedStyle","parseFloat","getClientRects","tileCoord","interimTile","transition_","transition","transitionStarts_","interpolate","release","setState","getInterimTile","refreshInterimChain","getTileCoord","getAlpha","inTransition","endTransition","Tile","tileLoadFunction","tileLoadFunction_","setImage","getBlankImage","naturalWidth","naturalHeight","targetProj","targetExtent","maxSourceExtent","errorThreshold","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","brokenDiagonalRendering_","drawTestTriangle","u1","v1","u2","v2","beginPath","moveTo","lineTo","closePath","clip","verifyBrokenDiagonalRendering","calculateSourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","triangulation","sources","gutter","renderEdges","imageSmoothingEnabled","pixelRound","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","solveLinearSystem","isBrokenDiagonalRendering","ud","vd","step","strokeStyle","lineWidth","stroke","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","calculateSourceExtentResolution","errorThresholdInPixels","triangulation_","Triangulation","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","reproject_","getTileSize","renderReprojected","leftToLoad","sourceListenKey","unlistenSources_","highWaterMark","count_","entries_","oldest_","newest_","expireCache","keep","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","getKeyZXY","LRUCache","pruneExceptNewestZ","fromKey","adaptAttributions","attributionLike","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","reject","getInterpolate","refresh","setAttributions","TileRange","containsTileRange","tileRange","tmpTileCoord","strict","compare","every","currentVal","res","isSorted","origins","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","forEachTileCoordParentTileRange","tempTileRange","tempExtent","tileCoordExtent","createOrUpdateTileRange","getTileCoordChildTileRange","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordCenter","getTileCoordForCoordAndResolution","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","createOrUpdateTileCoord","getTileCoordForCoordAndZ","getTileCoordResolution","getFullTileRange","opt_direction","tileCoordIntersectsViewport","viewport","fullTileRanges","getForProjection","resolutionsFromExtent","TileGrid","createForExtent","extentFromProjection","createForProjection","half","TileSourceEvent","Source","opaque_","opaque","tilePixelRatio_","tilePixelRatio","tileCache","TileCache","tmpSize","tileOptions","zDirection","getTileCacheForProjection","forEachLoadedTile","tileCoordKey","covered","getGutterForProjection","setKey","getOpaque","getTile","getTileGrid","getTileGridForProjection","getTilePixelRatio","getTilePixelSize","getTileCoordForTileUrlFunction","withinExtentAndZ","updateCacheSize","tileCount","useTile","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","range","createFromTemplates","templates","tileUrlFunctions","tileCoordHash","createFromTileUrlFunctions","UrlTile","TileSource","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","url","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","uid","tileState","TileEventType","setTileLoadFunction","setTileUrlFunction","startCharCode","stopCharCode","fromCharCode","stop","expandUrl","defaultTileLoadFunction","imageTile","tileClass","ImageTile","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","createTile_","urlTileCoord","tileUrl","newTile","ReprojTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","TileImage","xyzOptions","gridOptions","createXYZ","XYZ","insertFirst","autoPan","transform_","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","getElement","getOffset","getPosition","getPositioning","updatePixelPosition","performAutoPan","panIntoView","panIntoViewOptions","mapRect","getRect","overlayRect","myMargin","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","panOptions","box","pageXOffset","pageYOffset","mapSize","updateRenderedPosition","posX","posY","getOptions","Stroke","lineCap_","lineCap","lineDash_","lineDash","lineDashOffset_","lineDashOffset","lineJoin_","lineJoin","miterLimit_","miterLimit","width_","getLineCap","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","setColor","setLineCap","setLineDash","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","asColorLike","RegularShape","hitDetectionCanvas_","fill_","fill","points","radius_","radius1","radius2_","radius2","stroke_","renderOptions_","getFill","getPoints","getRadius","getRadius2","getStroke","setFill","createHitDetectionCanvas_","renderOptions","draw_","setStroke","calculateLineJoinSize_","strokeWidth","r1","r2","alpha","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","maxRadius","createPath_","drawHitDetectionCanvas_","arc","startAngle","angle0","radiusC","CircleStyle","setRadius","Fill","Style","geometryFunction_","defaultGeometryFunction","hitDetectionRenderer_","hitDetectionRenderer","text_","zIndex_","getText","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setText","defaultStyles","createDefaultStyle","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","TileProperty","getUseInterimTilesOnError","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","loadedTileCallback","tiles","createLoadedTileFinder","getLayer","renderIfReadyAndVisible","loadImage","pixelContext","LayerRenderer","renderedResolution","tempTransform","pixelTransform","containerReused","pixelContext_","col","row","createPixelContext","err","useContainer","backgroundColor","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","dispatchRenderEvent_","preRender","postRender","getRenderTransform","CanvasLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","isDrawableTile","layerExtent","tileOrigin","viewResolution","viewCenter","tileSource","sourceRevision","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","childTileRange","canvasScale","canvasTransform","toTransformString","clips","clipZs","currentClip","zs","reverse","currentZ","currentTilePixelSize","currentScale","originTileCoord","originTileExtent","tileGutter","tilesToDraw","xIndex","nextX","yIndex","nextY","contextSaved","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","alphaChanged","postRenderFunction","tileCallback","BaseTileLayer","CanvasTileLayerRenderer","maxEntries","rbush_","RBush_","items_","insert","extents","items","getAll","getInExtent","bbox","search","forEach_","forEachInExtent","toJSON","concat","rbush","withCredentials","xhr","format","success","failure","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","response","readFeatures","featureProjection","readProjection","onerror","send","loadFeaturesXhr","dataProjection","addFeatures","VectorSourceEvent","loader_","format_","overlaps_","overlaps","url_","loader","strategy_","strategy","allStrategy","useSpatialIndex","featuresRtree_","RBush","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","VectorEventType","handleFeatureChange_","valid","newFeatures","geometryFeatures","modifyingCollection","removeFeature","fast","featureId","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getFeaturesInExtent","wrapAndSliceX","anExtent","getClosestFeatureToCoordinate","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getOverlaps","getUrl","sid","removeFromIdIndex_","hasFeature","loadFeatures","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","featureChangeKeys","removed","setLoader","Text","font_","textAlign_","textAlign","justify_","justify","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","getFont","getPlacement","getMaxAngle","getOverflow","getTextAlign","getJustify","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","toStyle","flatStyle","prefix","iconSrc","iconImg","shapePoints","circleRadius","Circle","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","styleLike","styleFunction","toStyleFunction","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","VectorContext","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","getEndss","myEnds","CanvasInstruction","endGeometry","finish","reverseHitDetectionInstructions","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","CanvasBuilder","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","myBegin","sharedData","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","TEXT_ALIGN","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryType","geometryWidths","getFlatMidpoints","interiorPoints","getFlatInteriorPoints","beg","saveTextStates_","p0","p1","p2","p3","p","flatEnd","flatOffset","oo","drawChars_","strokeKey","textKey","fillKey","baseline","textFillStyle","textStrokeStyle","textScale","textOffsetX","textOffsetY","textRotateWithView","textRotation","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","singleSegment","previousAngle","iStart","charLength","chars","substring","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","horizontalTextAlign","align","createTextChunks","acc","line","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","textIsArray","chunks","widths","heights","lineWidths","baseStyle","currentWidth","currentHeight","getTextDimensions","renderWidth","leftRight","strokeInstructions","fillInstructions","previousFont","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","strokePadding","repeatSize","drawLabelWithPointPlacement_","execute_","featureCallback","hitExtent","pixelCoordinates","transform1","transform2","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","collides","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","cc","part","execute","executeHitDetection","ORDER","circlePixelIndexArrayCache","allInstructions","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","Executor","hasExecutors","candidates","declutteredFeatures","contextSize","newContext","indexes","maxDistanceSq","distances","pixelIndex","getPixelIndexArray","imageData","idx","executor","builderTypes","userTransform","context_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","simpleGeometry","transformGeom2D","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","HIT_DETECT_RESOLUTION","GEOMETRY_RENDERERS","builderGroup","declutterBuilderGroup","imageBuilderGroup","imageReplay","textBuilderGroup","textReplay","lineStringReplay","polygonReplay","replayGroup","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getTolerance","renderFeature","renderGeometry","renderFeatureInternal","getGeometries","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","compositionContext_","renderWorlds","executorGroup","vectorSource","endWorld","world","setupCompositionContext_","compositionContext","releaseCompositionContext_","makeScale","transformToString","clipped","CanvasImmediateRenderer","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","originalStyle","imgContext","byGeometryType","zIndexKeys","geomAndStyle","kk","createHitDetectionImageData","resultFeatures","hitDetect","lastIndexOf","executorGroups","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","defaultRenderOrder","renderedExtent","loadExtents","wrapCoordinateX","loadExtent","wrapExtentX","CanvasBuilderGroup","getRenderTolerance","userExtent","getSquaredRenderTolerance","dirty","replayGroupInstructions","ExecutorGroup","ScaleLine","ZoomToExtent","geom","TileLayer","VectorLayer","BaseVectorLayer","CanvasVectorLayerRenderer","fromLonLat","toLonLat","lonLat","lon","OSM","Vector","module","exports","u","_maxEntries","_minEntries","leaf","_all","toBBox","_build","_splitRoot","_insert","_condense","compareMinX","compareMinY","fromJSON","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin"],"sourceRoot":""}